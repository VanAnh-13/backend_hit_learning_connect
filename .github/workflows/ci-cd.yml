name: CI/CD with Maven and Heroku

on:
  push:
    branches:
      - main
      - dev
      - 'feature/**'
  pull_request:
    branches:
      - main
      - dev

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests
        run: mvn -B test

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/*.jar

  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

  #      - name: Run SonarQube Scan
  #        run: mvn -B verify sonar:sonar -Dsonar.projectKey=${GITHUB_REPOSITORY##*/} -Dsonar.organization=${GITHUB_REPOSITORY_OWNER}
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy_to_heroku:
    name: Deploy to Heroku
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    needs: [build_and_test, code_quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          procfile: "web: java -jar target/*.jar --server.port=$PORT $JAVA_OPTS"